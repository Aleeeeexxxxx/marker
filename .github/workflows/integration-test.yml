name: integration-test

on:
  issue_comment:
    types: [created]

permissions:
  issues: write
  pull-requests: write

jobs:
  integration-test:
    if: contains(github.event.comment.html_url, '/pull/')    
    runs-on: ubuntu-latest
    outputs:
      test-result: ${{ steps.run-tests.outputs.result }}
    steps:
      - name: Checkout code
        if: contains(github.event.comment.body, '#integration-test')
        uses: actions/checkout@v3

      - name: Checkout Pull Request
        run: hub pr checkout ${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: install dependency
        if: contains(github.event.comment.body, '#integration-test')
        run: npm i

      - name: Install xvfb
        if: contains(github.event.comment.body, '#integration-test')
        run: sudo apt-get update && sudo apt-get install xvfb 

      - name: Run integration tests
        id: run-tests
        if: contains(github.event.comment.body, '#integration-test')
        run: |
          if npm run integration-test; then
            echo "Test passed."
            echo "::set-output name=result::success"
          else
            echo "Test failed."
            echo "::set-output name=result::failure"
            exit 1
          fi

  
  success-job:
    needs: integration-test
    if: needs.integration-test.outputs.test-result == 'success'
    runs-on: ubuntu-latest

    steps:
      - name: Post success comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üéâ[SUCCESS]. CI link: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            })

  failure-job:
    needs: integration-test
    if: needs.integration-test.outputs.test-result == 'failure'
    runs-on: ubuntu-latest

    steps:
      - name: Post failure comment on PR
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ùå[FAILED]. CI link: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
            })
